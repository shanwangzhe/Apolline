{
  "name": "heatmap",
  "version": "0.0.5",
  "description": "canvas heat maps for node and the browser",
  "main": "index.js",
  "directories": {
    "lib": ".",
    "example": "example",
    "test": "test"
  },
  "dependencies": {
    "color-convert": "0.2.x",
    "canvas": "1.0.x"
  },
  "devDependencies": {
    "expresso": "0.7.x",
    "jquery-browserify": "1.6.x",
    "browserify": "1.3.x",
    "uglify-js": ">=1.0.6 <1.1"
  },
  "scripts": {
    "test": "expresso"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/substack/node-heatmap.git"
  },
  "keywords": [
    "heatmap",
    "canvas",
    "browser"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT/X11",
  "engine": {
    "node": ">=0.4"
  },
  "readme": "heatmap\n=======\n\nHeatmaps for node.js and the browser, groovy!\n\n![groovy heatmap, man](http://substack.net/images/heatmap.png)\n\nexample\n=======\n\nblob.js\n-------\n\n````javascript\nvar heatmap = require('heatmap');\n\nvar heat = heatmap(500, 500, { radius : 30 });\nfor (var i = 0; i < 5000; i++) {\n    var rho = Math.random() * 2 * Math.PI;\n    var z = Math.pow(Math.random(), 2) * 200;\n    \n    var x = 250 + Math.cos(rho) * z;\n    var y = 250 + Math.sin(rho) * z;\n    \n    heat.addPoint(x, y);\n}\nheat.draw();\n\nvar fs = require('fs');\nfs.writeFileSync('blob.png', heat.canvas.toBuffer());\n````\n\nmethods\n=======\n\nvar heatmap = require('heatmap');\n\nvar heat = heatmap(...)\n-----------------------\n\nCreate a new heatmap from an existing canvas element, a numeric width and\nheight, or an option object with canvas or width and height fields.\n\nOptionally, you can set the `opts.radius` and `opts.threshold` to control the\nrendering a little.\n\nheat.addPoint(x, y, params)\n---------------------------\n\nAdd a point to the heatmap with a `radius`.\n\n`params` can have:\n\n* radius, defaults to heat.radius || 20\n* weight, defaults to 0.1\n\nheat.scale(x, y)\n----------------\n\nScale the canvas by the coefficients `x` and `y`.\n\nIf `y` is undefined, scale both x and y by the first parameter, `x`.\n\nheat.draw()\n-----------\n\nRender all the points onto the canvas element.\n\nheat.canvas\n-----------\n\nThe HTML Canvas element.\n\nProtip: with the [canvas module](https://github.com/LearnBoost/node-canvas) for\nnode you can `heat.canvas.buffer()` to get a Buffer with a PNG file all up in it.\n\ninstall\n=======\n\nWith [npm](http://npmjs.org), just do:\n\n    npm install heatmap\n",
  "readmeFilename": "README.markdown",
  "_id": "heatmap@0.0.5",
  "dist": {
    "shasum": "de6aeda7f2e491a78eec5d26fba0bd3b79955097",
    "tarball": "https://registry.npmjs.org/heatmap/-/heatmap-0.0.5.tgz"
  },
  "_from": "heatmap@latest",
  "_npmVersion": "1.2.2",
  "_npmUser": {
    "name": "substack",
    "email": "mail@substack.net"
  },
  "maintainers": [
    {
      "name": "substack",
      "email": "mail@substack.net"
    }
  ],
  "_shasum": "de6aeda7f2e491a78eec5d26fba0bd3b79955097",
  "_resolved": "https://registry.npmjs.org/heatmap/-/heatmap-0.0.5.tgz"
}
